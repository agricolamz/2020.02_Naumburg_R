[
["index.html", "Polish Language(s) and Digital Humanities Using R 1 Prerequisites", " Polish Language(s) and Digital Humanities Using R G. Moroz 2020 1 Prerequisites Before the classes I would like to ask you to follow the instructions mentioned below to prepare your device for the class work: install R from the following link: https://cloud.r-project.org/ install RStudio from the following link: https://rstudio.com/products/rstudio/download/#download (FREE version, no need to pay!) after the installation run the RStudio program, type 2+2, and press Enter. If you see something like this, then you are well prepared for classes. Go to the https://rstudio.cloud/ website and sign up there. This is optional, but it will be a backup version, if something will not work on your computer. "],
["intro.html", "2 Introduction to R and RStudio 2.1 Introduction 2.2 Introduction to RStudio 2.3 R as a calculator 2.4 Comments 2.5 Functions 2.6 Variables 2.7 Variable types 2.8 Vector 2.9 Dataframe (tibble) 2.10 Packages 2.11 Data import 2.12 Rmarkdown", " 2 Introduction to R and RStudio 2.1 Introduction 2.1.1 Why data science? Data science is a new field that actively developing lately. This field merges computer science, math, statistics, and it is hard to say how much science in data science. In many scientific fields a new data science paradigm arises and even forms a new sub-field: Bioinformatics Crime data analysis Digital humanities Data journalism Data driven medicine ‚Ä¶ There are a lot of new books ‚ÄúData Science for ‚Ä¶‚Äù: psychologists (Hansj√∂rg 2019) immunologists (Thomas and Pallett 2019) business (Provost and Fawcett 2013) public policy (Brooks and Cooper 2013) fraud detection (Baesens, Van Vlasselaer, and Verbeke 2015) ‚Ä¶ Data scientist need to be able: gather data transform data visualize data create a statistical model based on data share and represent the results of this work organize the whole workflow in the reproducible way 2.1.2 Why R? R (R Core Team 2019) is a programing language with a big infrastructure of packages that helps to work in different fields of science and computer technology. There are several alternatives: Python (VanderPlas 2016; Grus 2019) Julia (Bezanson et al. 2017) bash (Janssens 2014) java (Brzustowicz 2017) ‚Ä¶ 2.2 Introduction to RStudio R is the programming language. RStudio is the most popular IDE (Integrated Development Environment) for R language. When you open RStudio for the first time you can see something like this: When you press button at the top of the left window you will be able to see all four panels of the RStudio. 2.3 R as a calculator Lets first start with a calculator. Press in R console 2+9 ## [1] 11 50*(9-20) ## [1] -550 3^3 ## [1] 27 9^0.5 ## [1] 3 9+0.5 ## [1] 9.5 9+.5 ## [1] 9.5 pi ## [1] 3.141593 Remeinder after division 10 %% 3 ## [1] 1 So you are ready to solve some really hard equations (round it four decimal places): \\[\\frac{\\pi+2}{2^{3-\\pi}}\\] üìã list of hints ‚û° üëÅ Are you sure that you rounded the result? ‚û° I expect the answer to be rounded to four decimal places: 0.87654321 becomes 0.8765. üëÅ Are you sure you didn‚Äôt get into the brackets trap? ‚û° Even though there is no any brackets in the mathematical notation, you need to add them in R, otherwise the operation order will be wrong. 2.4 Comments All text after the hash # within the same line is considered a comment. 2+2 # it is four ## [1] 4 # you can put any comments here 3+3 ## [1] 6 2.5 Functions The most important part of R is functions: here are some of them: sqrt(4) ## [1] 2 abs(-5) ## [1] 5 sin(pi/2) ## [1] 1 cos(pi) ## [1] -1 sum(2, 3, 9) ## [1] 14 prod(5, 3, 9) ## [1] 135 Each function has a name and zero or more arguments. All arguments of the function should be listed in parenthesis and separated by comma: pi ## [1] 3.141593 round(pi, 2) ## [1] 3.14 Each function‚Äôs argument has its own name and serial number. If you use names of the function‚Äôs arguments, you can put them in any order. If you do not use names of the function‚Äôs arguments, you should put them according the serial number. round(x = pi, digits = 2) ## [1] 3.14 round(digits = 2, x = pi) ## [1] 3.14 round(x = pi, d = 2) ## [1] 3.14 round(d = 2, x = pi) ## [1] 3.14 round(pi, 2) ## [1] 3.14 round(2, pi) # this is not the same as all previouse! ## [1] 2 There are some functions without any arguments, but you still should use parenthesis: Sys.Date() # correct ## [1] &quot;2020-02-05&quot; Sys.Date # wrong ## function () ## as.Date(as.POSIXlt(Sys.time())) ## &lt;bytecode: 0x56865248a9e8&gt; ## &lt;environment: namespace:base&gt; Each function in R is documented. You can read its documentation typing question mark befor the function name: ?Sys.Date Explore the function log() and calculate the following logarithm: \\[\\log_3(3486784401)\\] üìã list of hints ‚û° üëÅ A-a-a! I don‚Äôt remmember anything about logarithms‚Ä¶ ‚û° The logarithm is the inverse function to exponentiation. That means the logarithm of a given number x is the exponent to which another fixed number, the base b, must be raised, to produce that number x. \\[10^n = 1000,\\text{ what is n?}\\] \\[n = \\log_{10}(1000)\\] üëÅ What is this small 3 in the task means? ‚û° This is the base of the logarithm. So the task is: what is the exponent to which another fixed number, the base 3, must be raised, to produce that number 3486784401. 2.6 Variables Everything in R can be stored in a variable: x &lt;- 5 + 6 As a result, no output in the Console, and a new variable x appear in the Environment window. From now on I can use this new variable: x + x ## [1] 22 sum(x, x, 7) ## [1] 29 All those operation don‚Äôt change the variable value. In order to change the variable value you need to make a new assignment: x &lt;- 5 + 6 + 7 The fast way for creating &lt;- in RStudio is to press Alt - on your keyboard. It is possible to use equal sign = for assignment operation, but the recomendations are use arrow &lt;- for the assignment, and equal sign = for giving arguments‚Äô value inside the functions. 2.7 Variable types 2.8 Vector 2.8.1 Vector coercion 2.8.2 Vector operations 2.8.3 Vector recycling 2.8.4 Indexing vectors 2.8.5 NA value 2.9 Dataframe (tibble) 2.9.1 Indexing dataframes 2.10 Packages 2.11 Data import 2.11.1 .csv files 2.11.2 .xls and .xlsx files 2.12 Rmarkdown References "],
["dplyr.html", "3 Data manipulation: dplyr", " 3 Data manipulation: dplyr "],
["ggplot2.html", "4 Data visualisation: ggplot2", " 4 Data visualisation: ggplot2 "],
["stringr.html", "5 Strings manipulation: stringr", " 5 Strings manipulation: stringr "],
["texts.html", "6 Text manipulation: gutenbergr, tidytext, udpipe", " 6 Text manipulation: gutenbergr, tidytext, udpipe "],
["stylo.html", "7 Stylometric analysis: stylo", " 7 Stylometric analysis: stylo "],
["references.html", "References", " References "]
]
