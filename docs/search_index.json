[
["ggplot2.html", "4 Data visualisation: ggplot2 4.1 Why visualising data? 4.2 Basic ggplot2", " 4 Data visualisation: ggplot2 library(&quot;tidyverse&quot;) 4.1 Why visualising data? 4.1.1 The Anscombe’s Quartet In Anscombe, F. J. (1973). “Graphs in Statistical Analysis” there was the following dataset: quartet &lt;- read_csv(&quot;https://raw.githubusercontent.com/agricolamz/2020.02_Naumburg_R/master/data/anscombe.csv&quot;) quartet quartet %&gt;% group_by(dataset) %&gt;% summarise(mean_X = mean(x), mean_Y = mean(y), sd_X = sd(x), sd_Y = sd(y), cor = cor(x, y), n_obs = n()) %&gt;% select(-dataset) %&gt;% round(2) Lets visualise those datasets: 4.1.2 The DataSaurus In Matejka and Fitzmaurice (2017) “Same Stats, Different Graphs” there are the following datasets: datasaurus &lt;- read_csv(&quot;https://raw.githubusercontent.com/agricolamz/2020.02_Naumburg_R/master/data/datasaurus.csv&quot;) datasaurus And… all discriptive statistics are the same! datasaurus %&gt;% group_by(dataset) %&gt;% summarise(mean_X = mean(x), mean_Y = mean(y), sd_X = sd(x), sd_Y = sd(y), cor = cor(x, y), n_obs = n()) %&gt;% select(-dataset) %&gt;% round(1) 4.2 Basic ggplot2 ggplot2 is a modern tool for data visualisation. There are a lot of extentions for ggplot2. There is also a cheatsheet on ggplot2. There is also a whole book about ggplot2 (Wickham 2016). Every ggplot2 plot has three key components: data, A set of aesthetic mappings between variables in the data and visual properties, and At least one layer which describes how to render each observation. Layers are usually created with a geom_...() function. 4.2.1 Scaterplot I downloaded a Polish dictionary from here. I removed all abbreviations and proper names and took only one form from the paradigm. After all this I calculated the number of syllables (simply by counting vowels, combinations of i and other vowels I counted as one) and number of symbols in each word. Here is the result dataset. Download this dataset to the variable polish_dictionary. How many words are there? So this data could be visualised using the following code: ggplot2 ggplot(data = polish_dictionary, aes(x = n_char, y = n_vowels)) + geom_point() dplyr and ggplot2 polish_dictionary %&gt;% ggplot(aes(x = n_char, y = n_vowels))+ geom_point() 4.2.2 Layers All commands in ggplot2 are separated by + sign (author of the package, Hadley Wickham, is deeply regrets that it is not %&gt;%), but their order matters: polish_dictionary %&gt;% ggplot(aes(n_char, n_vowels))+ geom_point()+ geom_smooth() ## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &quot;cs&quot;)&#39; polish_dictionary %&gt;% ggplot(aes(n_char, n_vowels))+ geom_smooth()+ geom_point() ## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &quot;cs&quot;)&#39; 4.2.3 aes() Since every ggplot2 plot has data as a key components there is a function aes() that maps variables from dataframe onto visual properties of the graph. There is a simple rule: If values are from dataframe put them into aes(), otherwise — don’t. References "]
]
